import argparse
import socket

def get_banner(ip_address, port):
    """Retrieves the banner for a given IP address and port."""
    # Create a socket and connect to the IP address and port
    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    sock.settimeout(5)
    try:
        sock.connect((ip_address, port))
    except:
        print(f"[-] Could not connect to {ip_address}:{port}")
        return

    # Send a GET request and receive the response
    request = b"GET / HTTP/1.1\r\nHost: " + bytes(ip_address, "utf-8") + b"\r\n\r\n"
    sock.send(request)
    response = sock.recv(1024)

    # Print the banner if it was found
    if b"Server:" in response:
        banner = response.split(b"Server: ")[1].split(b"\r\n")[0]
        print(f"[+] {ip_address}:{port} - {banner.decode('utf-8')}")
    else:
        print(f"[+] {ip_address}:{port} - No banner found")

    sock.close()

def main():
    """Parses command-line arguments and runs the banner grabber."""
    parser = argparse.ArgumentParser(description="Retrieves banners from web servers.")
    parser.add_argument("ip_address", type=str, help="The IP address of the web server to test.")
    parser.add_argument("port", type=int, help="The port to test.")

    args = parser.parse_args()

    get_banner(args.ip_address, args.port)

if __name__ == "__main__":
    main()
